{"version":3,"file":"index.mjs","sources":["../../../../../src/components/virtual-list/src/index.tsx"],"sourcesContent":["import {\n  type CSSProperties,\n  type ExtractPropTypes,\n  type VNode,\n  computed,\n  defineComponent,\n  onMounted,\n  onUpdated,\n  ref,\n} from 'vue'\nimport Scrollbar from '../../scrollbar'\nimport { range } from '../../../utils'\n\nexport type VirtualListProps = ExtractPropTypes<typeof virtualListProps>\nexport type HTMLElementWithEl = HTMLElement & { $el: HTMLElement }\n\nconst virtualListProps = {\n  listHeight: Number,\n  listItemCount: {\n    type: Number,\n    default: 0,\n  },\n  estimatedListItemHeight: {\n    type: Number,\n    required: true,\n  },\n}\n\nexport default defineComponent({\n  name: 'VirtualList',\n  props: virtualListProps,\n  setup(props, { slots }) {\n    const start = ref(0)\n    const step = ref(0)\n    const end = computed(() => start.value + step.value)\n    const translate = ref(0)\n    const listHeight = ref(props.estimatedListItemHeight! * props.listItemCount)\n    const scrollbarEl = ref<HTMLElement>()\n    const realAreaEl = ref<HTMLElement>()\n\n    const itemInfos = computed(() =>\n      range(1, props.listItemCount, 1).map((_, index) => ({\n        index,\n        height: props.estimatedListItemHeight,\n        top: props.estimatedListItemHeight! * index,\n        bottom: props.estimatedListItemHeight! * (index + 1),\n      })),\n    )\n\n    const updateTranslate = () => {\n      translate.value\n        = start.value >= 1 ? itemInfos.value[start.value - 1].bottom : 0\n    }\n\n    const getStart = (scrollTop = 0) => {\n      return itemInfos.value.find(item => item.bottom > scrollTop)?.index\n    }\n\n    const virtualAreaStyle = computed(() => ({\n      height: `${listHeight.value}px`,\n    }))\n\n    const realAreaStyle = computed<CSSProperties>(() => ({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      transform: `translateY(${translate.value}px)`,\n    }))\n\n    onMounted(() => {\n      if (!scrollbarEl.value)\n        return\n\n      const height = props.listHeight\n        ? props.listHeight\n        : (scrollbarEl.value as HTMLElementWithEl).$el.offsetHeight\n\n      step.value = Math.ceil(height / props.estimatedListItemHeight!)\n    })\n\n    onUpdated(() => {\n      let index = start.value\n      const items = [...realAreaEl.value!.children]\n      items.forEach((item) => {\n        const rect = item.getBoundingClientRect()\n        const height = rect.height\n        const diff = itemInfos.value[index].height! - height\n        if (diff) {\n          itemInfos.value[index].height = height\n          itemInfos.value[index].bottom = itemInfos.value[index].bottom - diff\n          for (let j = index + 1; j < itemInfos.value.length; j++) {\n            itemInfos.value[j].top = itemInfos.value[j - 1].bottom\n            itemInfos.value[j].bottom = itemInfos.value[j].bottom - diff\n          }\n        }\n        if (index < itemInfos.value.length - 1)\n          index++\n      })\n      listHeight.value = itemInfos.value[itemInfos.value.length - 1].bottom\n      updateTranslate()\n    })\n\n    const onScroll = (evt: UIEvent) => {\n      const scrollTop = (evt.target as HTMLElement).scrollTop\n      start.value = getStart(scrollTop)!\n    }\n\n    const renderVirtualList = () => (\n      <>\n        <div style={virtualAreaStyle.value} />\n        <div\n          ref={realAreaEl}\n          style={realAreaStyle.value}\n        >\n          {(slots.default?.()[0].children as VNode[])?.slice(\n            start.value,\n            end.value,\n          )}\n        </div>\n      </>\n    )\n\n    return () => (\n      <Scrollbar\n        ref={scrollbarEl}\n        height={props.listHeight}\n        onScroll={onScroll}\n      >\n        {renderVirtualList()}\n      </Scrollbar>\n    )\n  },\n})\n"],"names":["_isVNode","_createVNode","_Fragment","Scrollbar"],"mappings":"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"}