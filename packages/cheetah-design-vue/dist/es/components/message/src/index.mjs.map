{"version":3,"file":"index.mjs","sources":["../../../../../src/components/message/src/index.tsx"],"sourcesContent":["import { type ExtractPropTypes, type PropType } from 'vue'\nimport { Transition, computed, createVNode, defineComponent, isVNode, render } from 'vue'\nimport { isFunction, isObject } from '@vue/shared'\nimport { useToggle } from '../../../composables'\nimport { animation } from '../../../utils'\nimport { type ComponentState } from '../../component'\nimport Alert from '../../alert'\n\nexport type MessageProps = Partial<ExtractPropTypes<typeof messageProps>>\n\nconst messageProps = {\n  content: String,\n  state: {\n    type: String as PropType<Exclude<ComponentState, 'primary'>>,\n    default: 'info',\n  },\n  closable: {\n    type: Boolean,\n    default: true,\n  },\n  autoClose: {\n    type: Boolean,\n    default: true,\n  },\n}\n\nexport const MessageConstructor = defineComponent({\n  name: 'Message',\n  props: messageProps,\n  setup(props, { slots }) {\n    const message = useToggle()\n\n    message.open()\n\n    props.autoClose && message.close({ delay: 3000 })\n\n    const icon = computed(() => {\n      const icons = {\n        info: 'info-circle',\n        success: 'check-circle',\n        warning: 'exclamation-triangle',\n        danger: 'x-circle',\n      }\n      return icons[props.state]\n    })\n\n    const renderNotification = () => (\n      <Alert\n        mode='solid'\n        icon={icon.value}\n        state={props.state}\n        description={props.content}\n        closable={props.closable}\n      />\n    )\n\n    return () => (\n      <Transition\n        enter-active-class={animation('slideInDown')}\n        leave-active-class={animation('slideOutUp')}\n        appear\n      >\n        {\n          message.state.value\n            ? slots.headless?.()[0]\n              ?? renderNotification()\n            : null\n        }\n      </Transition>\n    )\n  },\n})\n\nlet messagesContainer: HTMLDivElement | null = null\n\nexport default (options?: MessageProps | Function) => {\n  if (!messagesContainer) {\n    messagesContainer = document.createElement('div')\n    messagesContainer.className = 'ch-message-container'\n    document.body.appendChild(messagesContainer)\n  }\n  const vm = createVNode(\n    MessageConstructor,\n    isObject(options) ? { ...options } : null,\n    (isFunction(options) || isVNode(options))\n      ? {\n          headless: isFunction(options)\n            ? options\n            : () => options,\n        }\n      : null,\n  )\n  const container = document.createElement('div')\n  render(vm, container)\n  messagesContainer.appendChild(container.firstChild!)\n}\n"],"names":["_createVNode","Alert"],"mappings":";;;;;AAMA,MAAM,eAAe;AAAA,EACnB,SAAS;AAAA,EACT,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,EACV;AAAA,EACD,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS;AAAA,EACV;AAAA,EACD,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,EACV;AACH;AACY,MAAC,qBAAqC,gCAAgB;AAAA,EAChE,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM,OAAO;AAAA,IACX;AAAA,EACJ,GAAK;AACD,UAAM,UAAU;AAChB,YAAQ,KAAI;AACZ,UAAM,aAAa,QAAQ,MAAM;AAAA,MAC/B,OAAO;AAAA,IACb,CAAK;AACD,UAAM,OAAO,SAAS,MAAM;AAC1B,YAAM,QAAQ;AAAA,QACZ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,QACT,QAAQ;AAAA,MAChB;AACM,aAAO,MAAM,MAAM,KAAK;AAAA,IAC9B,CAAK;AACD,UAAM,qBAAqB,MAAMA,YAAaC,SAAO;AAAA,MACnD,QAAQ;AAAA,MACR,QAAQ,KAAK;AAAA,MACb,SAAS,MAAM;AAAA,MACf,eAAe,MAAM;AAAA,MACrB,YAAY,MAAM;AAAA,IACnB,GAAE,IAAI;AACP,WAAO,MAAMD,YAAa,YAAY;AAAA,MACpC,sBAAsB,UAAU,aAAa;AAAA,MAC7C,sBAAsB,UAAU,YAAY;AAAA,MAC5C,UAAU;AAAA,IAChB,GAAO;AAAA,MACD,SAAS,MAAM;;AAAA,gBAAC,QAAQ,MAAM,UAAQ,WAAM,aAAN,+BAAmB,OAAM,mBAAkB,IAAK,IAAI;AAAA;AAAA,IAChG,CAAK;AAAA,EACF;AACH,CAAC;AACD,IAAI,oBAAoB;AACxB,MAAe,UAAC,aAAW;AACzB,MAAI,CAAC,mBAAmB;AACtB,wBAAoB,SAAS,cAAc,KAAK;AAChD,sBAAkB,YAAY;AAC9B,aAAS,KAAK,YAAY,iBAAiB;AAAA,EAC5C;AACD,QAAM,KAAK,YAAY,oBAAoB,SAAS,OAAO,IAAI;AAAA,IAC7D,GAAG;AAAA,EACP,IAAM,MAAM,WAAW,OAAO,KAAK,QAAQ,OAAO,IAAI;AAAA,IAClD,UAAU,WAAW,OAAO,IAAI,UAAU,MAAM;AAAA,EACjD,IAAG,IAAI;AACR,QAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,SAAO,IAAI,SAAS;AACpB,oBAAkB,YAAY,UAAU,UAAU;AACpD;"}