import { __exports as ReactTestComponent } from "../../../../../../../_virtual/ReactTestComponent.mjs";
import "./lib/markup.mjs";
import { __exports as markup } from "../../../../../../../_virtual/markup.mjs";
Object.defineProperty(ReactTestComponent, "__esModule", {
  value: true
});
ReactTestComponent.test = ReactTestComponent.serialize = ReactTestComponent.default = void 0;
var _markup = markup;
var global = function() {
  if (typeof globalThis !== "undefined") {
    return globalThis;
  } else if (typeof global !== "undefined") {
    return global;
  } else if (typeof self !== "undefined") {
    return self;
  } else if (typeof window !== "undefined") {
    return window;
  } else {
    return Function("return this")();
  }
}();
var Symbol$1 = global["jest-symbol-do-not-touch"] || global.Symbol;
const testSymbol = typeof Symbol$1 === "function" && Symbol$1.for ? Symbol$1.for("react.test.json") : 245830487;
const getPropKeys = (object) => {
  const { props } = object;
  return props ? Object.keys(props).filter((key) => props[key] !== void 0).sort() : [];
};
const serialize = (object, config, indentation, depth, refs, printer) => ++depth > config.maxDepth ? (0, _markup.printElementAsLeaf)(object.type, config) : (0, _markup.printElement)(
  object.type,
  object.props ? (0, _markup.printProps)(
    getPropKeys(object),
    object.props,
    config,
    indentation + config.indent,
    depth,
    refs,
    printer
  ) : "",
  object.children ? (0, _markup.printChildren)(
    object.children,
    config,
    indentation + config.indent,
    depth,
    refs,
    printer
  ) : "",
  config,
  indentation
);
ReactTestComponent.serialize = serialize;
const test = (val) => val && val.$$typeof === testSymbol;
ReactTestComponent.test = test;
const plugin = {
  serialize,
  test
};
var _default = plugin;
ReactTestComponent.default = _default;
//# sourceMappingURL=ReactTestComponent.mjs.map
