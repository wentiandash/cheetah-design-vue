{"version":3,"file":"Immutable.mjs","sources":["../../../../../../../../../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/Immutable.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _collections = require('../collections');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// SENTINEL constants are from https://github.com/facebook/immutable-js\nconst IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\nconst IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\nconst IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\nconst IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\nconst IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\nconst IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@'; // immutable v4\n\nconst IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\nconst IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\nconst IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\nconst getImmutableName = name => 'Immutable.' + name;\n\nconst printAsLeaf = name => '[' + name + ']';\n\nconst SPACE = ' ';\nconst LAZY = 'â€¦'; // Seq is lazy if it calls a method like filter\n\nconst printImmutableEntries = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer,\n  type\n) =>\n  ++depth > config.maxDepth\n    ? printAsLeaf(getImmutableName(type))\n    : getImmutableName(type) +\n      SPACE +\n      '{' +\n      (0, _collections.printIteratorEntries)(\n        val.entries(),\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      '}'; // Record has an entries method because it is a collection in immutable v3.\n// Return an iterator for Immutable Record from version v3 or v4.\n\nfunction getRecordEntries(val) {\n  let i = 0;\n  return {\n    next() {\n      if (i < val._keys.length) {\n        const key = val._keys[i++];\n        return {\n          done: false,\n          value: [key, val.get(key)]\n        };\n      }\n\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n  };\n}\n\nconst printImmutableRecord = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer\n) => {\n  // _name property is defined only for an Immutable Record instance\n  // which was constructed with a second optional descriptive name arg\n  const name = getImmutableName(val._name || 'Record');\n  return ++depth > config.maxDepth\n    ? printAsLeaf(name)\n    : name +\n        SPACE +\n        '{' +\n        (0, _collections.printIteratorEntries)(\n          getRecordEntries(val),\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        ) +\n        '}';\n};\n\nconst printImmutableSeq = (val, config, indentation, depth, refs, printer) => {\n  const name = getImmutableName('Seq');\n\n  if (++depth > config.maxDepth) {\n    return printAsLeaf(name);\n  }\n\n  if (val[IS_KEYED_SENTINEL]) {\n    return (\n      name +\n      SPACE +\n      '{' + // from Immutable collection of entries or from ECMAScript object\n      (val._iter || val._object\n        ? (0, _collections.printIteratorEntries)(\n            val.entries(),\n            config,\n            indentation,\n            depth,\n            refs,\n            printer\n          )\n        : LAZY) +\n      '}'\n    );\n  }\n\n  return (\n    name +\n    SPACE +\n    '[' +\n    (val._iter || // from Immutable collection of values\n    val._array || // from ECMAScript array\n    val._collection || // from ECMAScript collection in immutable v4\n    val._iterable // from ECMAScript collection in immutable v3\n      ? (0, _collections.printIteratorValues)(\n          val.values(),\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        )\n      : LAZY) +\n    ']'\n  );\n};\n\nconst printImmutableValues = (\n  val,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer,\n  type\n) =>\n  ++depth > config.maxDepth\n    ? printAsLeaf(getImmutableName(type))\n    : getImmutableName(type) +\n      SPACE +\n      '[' +\n      (0, _collections.printIteratorValues)(\n        val.values(),\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      ']';\n\nconst serialize = (val, config, indentation, depth, refs, printer) => {\n  if (val[IS_MAP_SENTINEL]) {\n    return printImmutableEntries(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map'\n    );\n  }\n\n  if (val[IS_LIST_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      'List'\n    );\n  }\n\n  if (val[IS_SET_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set'\n    );\n  }\n\n  if (val[IS_STACK_SENTINEL]) {\n    return printImmutableValues(\n      val,\n      config,\n      indentation,\n      depth,\n      refs,\n      printer,\n      'Stack'\n    );\n  }\n\n  if (val[IS_SEQ_SENTINEL]) {\n    return printImmutableSeq(val, config, indentation, depth, refs, printer);\n  } // For compatibility with immutable v3 and v4, let record be the default.\n\n  return printImmutableRecord(val, config, indentation, depth, refs, printer);\n}; // Explicitly comparing sentinel properties to true avoids false positive\n// when mock identity-obj-proxy returns the key as the value for any key.\n\nexports.serialize = serialize;\n\nconst test = val =>\n  val &&\n  (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\n\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"names":["require$$0"],"mappings":"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","x_google_ignoreList":[0]}