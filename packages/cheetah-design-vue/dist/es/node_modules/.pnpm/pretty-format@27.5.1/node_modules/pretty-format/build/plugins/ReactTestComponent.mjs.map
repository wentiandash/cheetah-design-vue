{"version":3,"file":"ReactTestComponent.mjs","sources":["../../../../../../../../../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/ReactTestComponent.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _markup = require('./lib/markup');\n\nvar global = (function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')();\n  }\n})();\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nconst testSymbol =\n  typeof Symbol === 'function' && Symbol.for\n    ? Symbol.for('react.test.json')\n    : 0xea71357;\n\nconst getPropKeys = object => {\n  const {props} = object;\n  return props\n    ? Object.keys(props)\n        .filter(key => props[key] !== undefined)\n        .sort()\n    : [];\n};\n\nconst serialize = (object, config, indentation, depth, refs, printer) =>\n  ++depth > config.maxDepth\n    ? (0, _markup.printElementAsLeaf)(object.type, config)\n    : (0, _markup.printElement)(\n        object.type,\n        object.props\n          ? (0, _markup.printProps)(\n              getPropKeys(object),\n              object.props,\n              config,\n              indentation + config.indent,\n              depth,\n              refs,\n              printer\n            )\n          : '',\n        object.children\n          ? (0, _markup.printChildren)(\n              object.children,\n              config,\n              indentation + config.indent,\n              depth,\n              refs,\n              printer\n            )\n          : '',\n        config,\n        indentation\n      );\n\nexports.serialize = serialize;\n\nconst test = val => val && val.$$typeof === testSymbol;\n\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"names":["require$$0","Symbol"],"mappings":";;;AAEA,OAAO,eAAe,oBAAS,cAAc;AAAA,EAC3C,OAAO;AACT,CAAC;AACD,mBAAA,OAAgC,mBAAA,yCAAqB;AAErD,IAAI,UAAUA;AAEd,IAAI,SAAU,WAAY;AACxB,MAAI,OAAO,eAAe,aAAa;AACrC,WAAO;AAAA,EACX,WAAa,OAAO,WAAW,aAAa;AACxC,WAAO;AAAA,EACX,WAAa,OAAO,SAAS,aAAa;AACtC,WAAO;AAAA,EACX,WAAa,OAAO,WAAW,aAAa;AACxC,WAAO;AAAA,EACX,OAAS;AACL,WAAO,SAAS,aAAa;EAC9B;AACH;AAEA,IAAIC,WAAS,OAAO,0BAA0B,KAAK,OAAO;AAC1D,MAAM,aACJ,OAAOA,aAAW,cAAcA,SAAO,MACnCA,SAAO,IAAI,iBAAiB,IAC5B;AAEN,MAAM,cAAc,YAAU;AAC5B,QAAM,EAAC,MAAK,IAAI;AAChB,SAAO,QACH,OAAO,KAAK,KAAK,EACd,OAAO,SAAO,MAAM,GAAG,MAAM,MAAS,EACtC,KAAM,IACT;AACN;AAEA,MAAM,YAAY,CAAC,QAAQ,QAAQ,aAAa,OAAO,MAAM,YAC3D,EAAE,QAAQ,OAAO,YACb,GAAI,QAAQ,oBAAoB,OAAO,MAAM,MAAM,KACnD,GAAI,QAAQ;AAAA,EACV,OAAO;AAAA,EACP,OAAO,SACH,GAAI,QAAQ;AAAA,IACV,YAAY,MAAM;AAAA,IAClB,OAAO;AAAA,IACP;AAAA,IACA,cAAc,OAAO;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,EACD,IACD;AAAA,EACJ,OAAO,YACH,GAAI,QAAQ;AAAA,IACV,OAAO;AAAA,IACP;AAAA,IACA,cAAc,OAAO;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,EACD,IACD;AAAA,EACJ;AAAA,EACA;AACR;AAEiB,mBAAA,YAAG;AAEpB,MAAM,OAAO,SAAO,OAAO,IAAI,aAAa;AAEhC,mBAAA,OAAG;AACf,MAAM,SAAS;AAAA,EACb;AAAA,EACA;AACF;AACA,IAAI,WAAW;AACf,mBAAA,UAAkB;","x_google_ignoreList":[0]}