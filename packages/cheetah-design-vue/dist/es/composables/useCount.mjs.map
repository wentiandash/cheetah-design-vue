{"version":3,"file":"useCount.mjs","sources":["../../../src/composables/useCount.ts"],"sourcesContent":["import { type Ref, ref, toValue } from 'vue'\nimport { isNumber } from '../utils'\n\nexport interface CountOptions {\n  initial?: number\n  min?: number | Ref<number>\n  max?: number | Ref<number>\n}\n\nexport function useCount(options: CountOptions = {}) {\n  const {\n    min = -Infinity,\n    max = Infinity,\n    initial = 0,\n  } = options\n\n  const count = ref(initial)\n\n  const add = (step = 1) => {\n    if (isNumber(toValue(max)) && count.value < toValue(max)) {\n      if (count.value + step > toValue(max))\n        return count.value = toValue(max)\n      count.value += step\n    }\n  }\n\n  const sub = (step = 1) => {\n    if (isNumber(toValue(min)) && count.value > toValue(min)) {\n      if (count.value - step < toValue(min))\n        return count.value = toValue(min)\n      count.value -= step\n    }\n  }\n\n  const update = (value: number) => {\n    if (value >= toValue(min) && value <= toValue(max))\n      count.value = value\n  }\n\n  return {\n    count,\n    add,\n    sub,\n    update,\n  }\n}\n"],"names":[],"mappings":";;AASgB,SAAA,SAAS,UAAwB,IAAI;AAC7C,QAAA;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,EACR,IAAA;AAEE,QAAA,QAAQ,IAAI,OAAO;AAEnB,QAAA,MAAM,CAAC,OAAO,MAAM;AACpB,QAAA,SAAS,QAAQ,GAAG,CAAC,KAAK,MAAM,QAAQ,QAAQ,GAAG,GAAG;AACxD,UAAI,MAAM,QAAQ,OAAO,QAAQ,GAAG;AAC3B,eAAA,MAAM,QAAQ,QAAQ,GAAG;AAClC,YAAM,SAAS;AAAA,IACjB;AAAA,EAAA;AAGI,QAAA,MAAM,CAAC,OAAO,MAAM;AACpB,QAAA,SAAS,QAAQ,GAAG,CAAC,KAAK,MAAM,QAAQ,QAAQ,GAAG,GAAG;AACxD,UAAI,MAAM,QAAQ,OAAO,QAAQ,GAAG;AAC3B,eAAA,MAAM,QAAQ,QAAQ,GAAG;AAClC,YAAM,SAAS;AAAA,IACjB;AAAA,EAAA;AAGI,QAAA,SAAS,CAAC,UAAkB;AAChC,QAAI,SAAS,QAAQ,GAAG,KAAK,SAAS,QAAQ,GAAG;AAC/C,YAAM,QAAQ;AAAA,EAAA;AAGX,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;"}