{"version":3,"file":"index.js","sources":["../../../../../src/components/notification/src/index.tsx"],"sourcesContent":["import { Transition, computed, createVNode, defineComponent, isVNode, render } from 'vue'\nimport type { ExtractPropTypes, PropType } from 'vue'\n\nimport { isFunction, isObject } from '@vue/shared'\nimport { type ToggleHandler, useToggle } from '../../../composables'\nimport { animation, uppercaseFirstWord } from '../../../utils'\nimport Button from '../../button'\nimport Icon from '../../icon'\n\ntype ShakeOffProp = 'x-button' | 'icon' | 'title' | 'confirm-button' | 'cancel-button'\nexport type NotificationProps = Partial<ExtractPropTypes<typeof notificationProps>>\nexport type NotificationInstance = Pick<ToggleHandler, 'state' | 'open' | 'close'>\n\nconst notificationProps = {\n  title: String,\n  content: String,\n  cancelButtonText: String,\n  confirmButtonText: String,\n  onCancel: Function as PropType<(handler: NotificationInstance) => any>,\n  onConfirm: Function as PropType<(handler: NotificationInstance) => any>,\n  shakeOff: {\n    type: Array as PropType<ShakeOffProp[]>,\n    default: () => [],\n  },\n  autoClose: {\n    type: Boolean,\n    default: true,\n  },\n  placement: {\n    type: String as PropType<'left' | 'right'>,\n    default: 'left',\n  },\n}\n\nexport const NotificationConstructor = defineComponent({\n  name: 'Notification',\n  props: notificationProps,\n  setup(props, { slots }) {\n    const notify = useToggle() as NotificationInstance\n\n    notify.open()\n\n    props.autoClose && notify.close({ delay: 3000 })\n\n    const animate = computed(() => uppercaseFirstWord(props.placement))\n\n    const isShake = (prop: ShakeOffProp) => props.shakeOff.includes(prop)\n\n    const onCancel = () => props.onCancel?.(notify)\n\n    const onConfirm = () => props.onConfirm?.(notify)\n\n    const renderNotification = () => {\n      const renderIcon = () => {\n        if (!isShake('icon'))\n          return <Icon name='bell' />\n      }\n      const renderTitleContent = () => {\n        const renderFn = [\n          <div class='ch-notification-content'>{props.content}</div>,\n        ]\n        if (!isShake('title'))\n          renderFn.unshift(<h3 class='ch-notification-title'>{props.title}</h3>)\n\n        return renderFn\n      }\n      const renderXButton = () => {\n        if (!isShake('x-button')) {\n          return (\n            <Button\n              class='ch-notification-close'\n              mode='link'\n              state='info'\n              icon-left='x-lg'\n              onClick={notify.close}\n            />\n          )\n        }\n      }\n      const renderButton = () => {\n        const renderFn = []\n        if (!isShake('cancel-button') && props.cancelButtonText) {\n          renderFn.push(\n            <Button\n              mode='link'\n              onClick={onCancel}\n            >\n              {props.cancelButtonText}\n            </Button>,\n          )\n        }\n        if (!isShake('confirm-button') && props.confirmButtonText) {\n          renderFn.push(\n            <Button\n              mode='link'\n              onClick={onConfirm}\n            >\n              {props.confirmButtonText}\n            </Button>,\n          )\n        }\n        return renderFn\n      }\n\n      return (\n        <div class='ch-notification'>\n          {renderIcon()}\n          <main>\n            {renderXButton()}\n            {renderTitleContent()}\n            {renderButton()}\n          </main>\n        </div>\n      )\n    }\n\n    return () => (\n      <Transition\n        enter-active-class={animation(`slideIn${animate.value}`)}\n        leave-active-class={animation(`zoomOut${animate.value}`)}\n        appear\n      >\n        {\n          notify.state.value\n            ? slots.headless?.()[0]\n              ?? renderNotification()\n            : null\n        }\n      </Transition>\n    )\n  },\n})\n\nlet notificationsContainer: HTMLDivElement | null = null\n\nexport default (options?: NotificationProps | Function) => {\n  if (!notificationsContainer) {\n    notificationsContainer = document.createElement('div')\n    notificationsContainer.className = 'ch-notification-container'\n    document.body.appendChild(notificationsContainer)\n  }\n  const props = isObject(options) ? { ...options } : null\n  const child = (isFunction(options) || isVNode(options))\n    ? {\n        headless: isFunction(options)\n          ? options\n          : () => options,\n      }\n    : null\n\n  const container = document.createElement('div')\n  const notification = createVNode(NotificationConstructor, props as NotificationProps, child)\n  render(notification, container)\n  notificationsContainer.classList.add(`__${(options as NotificationProps)?.placement || 'left'}`)\n  notificationsContainer.appendChild(container.firstChild!)\n}\n"],"names":["defineComponent","useToggle","computed","uppercaseFirstWord","_createVNode","Icon","Button","Transition","animation","isObject","isFunction","isVNode","createVNode","render"],"mappings":"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"}