{"version":3,"file":"index.js","sources":["../../../../../src/components/pagination/src/index.tsx"],"sourcesContent":["import type { ExtractPropTypes, PropType, Ref } from 'vue'\nimport { computed, defineComponent, ref, watchEffect } from 'vue'\nimport { useCount, useExpose } from '../../../composables'\nimport { range } from '../../../utils'\nimport type { ButtonShape, ButtonType } from '../../button'\nimport Button from '../../button'\nimport Input from '../../input'\n\nexport type PaginationProps = ExtractPropTypes<typeof paginationProps>\nexport type PaginationInstance = HTMLElement & {\n  current: Ref<number>\n  prev: (step?: number) => any\n  next: (step?: number) => any\n  toggle: (value?: number) => any\n}\n\nconst paginationProps = {\n  count: {\n    type: Number,\n    default: 0,\n  },\n  showCount: {\n    type: Number,\n    default: 7,\n  },\n  mode: {\n    type: String as PropType<ButtonType>,\n    default: 'ghost',\n  },\n  shape: {\n    type: String as PropType<ButtonShape>,\n    default: 'rounded',\n  },\n}\n\nexport default defineComponent({\n  name: 'Pagination',\n  props: paginationProps,\n  setup(props) {\n    const count = computed(() => range(2, props.count - 1, 1))\n    const max = computed(() => count.value.length + 2)\n\n    const {\n      count: current,\n      add: next,\n      sub: prev,\n      update: toggle,\n    } = useCount({\n      initial: 1,\n      min: 1,\n      max,\n    })\n\n    useExpose({\n      current,\n      next,\n      prev,\n      toggle,\n    })\n\n    const start = ref(0)\n    const end = ref(props.showCount - 3)\n    const isShowLeftFold = computed(() => current.value * 2 - 1 > props.showCount)\n    const isShowRightFold = computed(() => (props.count - current.value) * 2 - 1 >= props.showCount)\n    const onPrev = () => prev()\n    const onNext = () => next()\n    const onStepPrev = () => prev(end.value - start.value - 1)\n    const onStepNext = () => next(end.value - start.value)\n    const onPageNo = (no: number) => () => current.value = no\n    const onToggle = (evt: FocusEvent) => {\n      toggle(parseInt((evt.target as HTMLInputElement).value))\n    }\n\n    watchEffect(() => {\n      if (isShowLeftFold.value && isShowRightFold.value) {\n        const currentIndex = count.value.findIndex(value => value === current.value)\n        const float = (props.showCount - 3) / 2\n        start.value = currentIndex - float\n        end.value = currentIndex + float + 1\n      }\n      else if (isShowLeftFold.value) {\n        start.value = count.value.length - props.showCount + 1\n        end.value = count.value.length\n      }\n      else if (isShowRightFold.value) {\n        start.value = 0\n        end.value = props.showCount - 2\n      }\n    })\n\n    return () => (\n      <div class='ch-pagination' v-show={props.count > 1}>\n        <Button\n          size='mini'\n          state='info'\n          iconLeft='chevron-left'\n          mode={props.mode}\n          shape={props.shape}\n          onClick={onPrev}\n        />\n        <Button\n          size='mini'\n          mode={props.mode}\n          shape={props.shape}\n          state={current.value === 1 ? 'primary' : 'info'}\n          onClick={onPageNo(1)}\n        >\n          1\n        </Button>\n        <Button\n          size='mini'\n          state='info'\n          iconLeft='three-dots'\n          mode={props.mode}\n          shape={props.shape}\n          v-show={isShowLeftFold.value}\n          onClick={onStepPrev}\n        />\n        {\n          count.value\n            ?.slice(start.value, end.value)\n            .map(pageNo => (\n              <Button\n                size='mini'\n                mode={props.mode}\n                shape={props.shape}\n                state={current.value === pageNo ? 'primary' : 'info'}\n                onClick={onPageNo(pageNo)}\n              >\n                {pageNo}\n              </Button>\n            ))\n        }\n        <Button\n          size='mini'\n          state='info'\n          iconLeft='three-dots'\n          mode={props.mode}\n          shape={props.shape}\n          v-show={isShowRightFold.value}\n          onClick={onStepNext}\n        />\n        <Button\n          size='mini'\n          mode={props.mode}\n          shape={props.shape}\n          state={current.value === props.count ? 'primary' : 'info'}\n          onClick={onPageNo(props.count)}\n        >\n          {props.count}\n        </Button>\n        <Button\n          size='mini'\n          state='info'\n          iconLeft='chevron-right'\n          mode={props.mode}\n          shape={props.shape}\n          onClick={onNext}\n        />\n        to <Input style='width: 56px' type=\"number\" size='small' onBlur={onToggle} />\n      </div>\n    )\n  },\n})\n"],"names":["_isVNode","defineComponent","computed","range","useCount","useExpose","ref","watchEffect","_withDirectives","_createVNode","Button","_createTextVNode","_vShow","Input"],"mappings":"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"}