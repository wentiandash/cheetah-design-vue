{"version":3,"file":"index.js","sources":["../../../../../src/components/table/src/index.ts"],"sourcesContent":["import type { Ref } from 'vue'\nimport { onMounted, ref, watchEffect } from 'vue'\n\nexport interface TableProps {\n  width?: number\n  header: TableHeaderCell[]\n  data: Record<string, any>[]\n  fixedHeader?: boolean\n  striped?: boolean\n  border?: boolean\n}\n\nexport interface TableConfig {\n  striped: boolean\n  width: number\n  columns: TableHeaderCell[]\n  data: Record<string, any>[]\n}\n\nexport interface TableHeaderCell {\n  name: string\n  key?: string\n  width?: number\n  index?: number\n  children?: TableHeaderCell[]\n}\n\nexport interface TableHeaderCellProps {\n  data: TableHeaderCell\n}\n\nexport interface TableCellProps {\n  data: any\n}\n\nexport interface TableRowProps {\n  data: Record<string, any>[]\n}\n\nexport const config = ref<TableConfig>({\n  striped: false,\n  width: 0,\n  columns: [],\n  data: [],\n})\n\nexport const genTableConfig = (props: TableProps, el: Ref<HTMLElement | undefined>) => {\n  let index = 0\n  let totalWidth = 0\n\n  watchEffect(() => {\n    config.value.width = props.width ?? 180\n    config.value.striped = props.striped ?? false\n    config.value.data = props.data\n  })\n  config.value.columns.length = 0\n  genColumnConfig(props.header)\n\n  onMounted(() => {\n    const scrollbarWidth = 7\n    config.value.columns.forEach((column, index, array) => {\n      if (index === array.length - 1) {\n        el.value?.style.setProperty(\n            `--ch-table-column-${column.index}-width`,\n            `${totalWidth > el.value?.clientWidth ? config.value.width : el.value?.clientWidth - totalWidth - scrollbarWidth}px`,\n        )\n      }\n      else {\n        totalWidth += column.width ?? config.value.width\n        el.value?.style.setProperty(`--ch-table-column-${column.index}-width`, `${column.width ?? config.value.width}px`)\n      }\n    })\n  })\n\n  function genColumnConfig(header: TableHeaderCell[]) {\n    header.forEach((cell) => {\n      if (cell.children) {\n        genColumnConfig(cell.children)\n      }\n      else {\n        cell.index = index++\n        config.value.columns.push({ index, ...cell })\n      }\n    })\n  }\n}\n"],"names":["ref","watchEffect","onMounted","index"],"mappings":";;;AAuCO,MAAM,SAASA,IAAAA,IAAiB;AAAA,EACrC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,SAAS,CAAC;AAAA,EACV,MAAM,CAAC;AACT,CAAC;AAEY,MAAA,iBAAiB,CAAC,OAAmB,OAAqC;AACrF,MAAI,QAAQ;AACZ,MAAI,aAAa;AAEjBC,MAAAA,YAAY,MAAM;AACT,WAAA,MAAM,QAAQ,MAAM,SAAS;AAC7B,WAAA,MAAM,UAAU,MAAM,WAAW;AACjC,WAAA,MAAM,OAAO,MAAM;AAAA,EAAA,CAC3B;AACM,SAAA,MAAM,QAAQ,SAAS;AAC9B,kBAAgB,MAAM,MAAM;AAE5BC,MAAAA,UAAU,MAAM;AACd,UAAM,iBAAiB;AACvB,WAAO,MAAM,QAAQ,QAAQ,CAAC,QAAQC,QAAO,UAAU;;AACjDA,UAAAA,WAAU,MAAM,SAAS,GAAG;AAC9B,iBAAG,UAAH,mBAAU,MAAM;AAAA,UACZ,qBAAqB,OAAO,KAAK;AAAA,UACjC,GAAG,eAAa,QAAG,UAAH,mBAAU,eAAc,OAAO,MAAM,UAAQ,QAAG,UAAH,mBAAU,eAAc,aAAa,cAAc;AAAA;AAAA,MACpH,OAEG;AACW,sBAAA,OAAO,SAAS,OAAO,MAAM;AAC3C,iBAAG,UAAH,mBAAU,MAAM,YAAY,qBAAqB,OAAO,KAAK,UAAU,GAAG,OAAO,SAAS,OAAO,MAAM,KAAK;AAAA,MAC9G;AAAA,IAAA,CACD;AAAA,EAAA,CACF;AAED,WAAS,gBAAgB,QAA2B;AAC3C,WAAA,QAAQ,CAAC,SAAS;AACvB,UAAI,KAAK,UAAU;AACjB,wBAAgB,KAAK,QAAQ;AAAA,MAAA,OAE1B;AACH,aAAK,QAAQ;AACb,eAAO,MAAM,QAAQ,KAAK,EAAE,OAAO,GAAG,MAAM;AAAA,MAC9C;AAAA,IAAA,CACD;AAAA,EACH;AACF;;;"}