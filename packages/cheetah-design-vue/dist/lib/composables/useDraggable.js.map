{"version":3,"file":"useDraggable.js","sources":["../../../src/composables/useDraggable.ts"],"sourcesContent":["import { type MaybeRef } from 'vue'\nimport { onMounted, onUnmounted, ref, toValue } from 'vue'\n\nexport interface DraggableOptions {\n  target?: MaybeRef<HTMLElement | undefined>\n  /**\n   * Avoiding positional calculation errors caused by css style 'transform: translate()'.\n   */\n  translateX?: MaybeRef<number>\n  translateY?: MaybeRef<number>\n}\n\nexport function useDraggable(\n  handle: MaybeRef<HTMLElement | undefined>,\n  options: DraggableOptions = {},\n) {\n  const {\n    target = document.documentElement,\n    translateX = 0,\n    translateY = 0,\n  } = options\n\n  let unhandle: HTMLElement | undefined\n  let untarget: HTMLElement | undefined\n  const handleRect = ref<DOMRect>()\n  const pointerStartPos = ref({ x: 0, y: 0 })\n\n  onMounted(() => {\n    unhandle = toValue(handle)\n    untarget = toValue(target)\n\n    if (!unhandle || !untarget)\n      return\n\n    unhandle.addEventListener('dragstart', dragstart)\n    untarget.addEventListener('dragenter', dragenter)\n    untarget.addEventListener('dragover', dragover)\n    untarget.addEventListener('dragleave', dragleave)\n    untarget.addEventListener('drop', drop)\n  })\n\n  onUnmounted(() => {\n    if (!unhandle || !untarget)\n      return\n\n    unhandle.removeEventListener('dragstart', dragstart)\n    untarget.removeEventListener('dragenter', dragenter)\n    untarget.removeEventListener('dragover', dragover)\n    untarget.removeEventListener('dragleave', dragleave)\n    untarget.removeEventListener('drop', drop)\n  })\n\n  function dragstart(evt: DragEvent) {\n    // console.log('dragstart: ', evt)\n    handleRect.value = unhandle?.getBoundingClientRect()\n    pointerStartPos.value.x = evt.clientX\n    pointerStartPos.value.y = evt.clientY\n  }\n\n  function dragenter(evt: DragEvent) {\n    evt.dataTransfer!.dropEffect = 'move'\n    // console.log('dragenter: ', evt)\n  }\n\n  function dragover(evt: DragEvent) {\n    // console.log('dragover: ', evt, evt.clientX, evt.clientY)\n    evt.preventDefault()\n  }\n\n  function dragleave(evt: DragEvent) {\n    // console.log('dragleave: ', evt)\n    evt.dataTransfer!.dropEffect = 'none'\n  }\n\n  function drop(evt: DragEvent) {\n    // console.log('drop: ', evt)\n    if (!handleRect.value || !unhandle)\n      return\n\n    console.log(toValue(translateX))\n\n    unhandle.style.position = 'absolute'\n    unhandle.style.top = `${handleRect.value.y + toValue(translateY) + evt.clientY - pointerStartPos.value.y}px`\n    unhandle.style.left = `${handleRect.value.x + toValue(translateX) + evt.clientX - pointerStartPos.value.x}px`\n  }\n}\n"],"names":["ref","onMounted","toValue","onUnmounted"],"mappings":";;;AAYO,SAAS,aACd,QACA,UAA4B,IAC5B;AACM,QAAA;AAAA,IACJ,SAAS,SAAS;AAAA,IAClB,aAAa;AAAA,IACb,aAAa;AAAA,EACX,IAAA;AAEA,MAAA;AACA,MAAA;AACJ,QAAM,aAAaA,IAAAA;AACnB,QAAM,kBAAkBA,IAAAA,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG;AAE1CC,MAAAA,UAAU,MAAM;AACd,eAAWC,IAAAA,QAAQ,MAAM;AACzB,eAAWA,IAAAA,QAAQ,MAAM;AAErB,QAAA,CAAC,YAAY,CAAC;AAChB;AAEO,aAAA,iBAAiB,aAAa,SAAS;AACvC,aAAA,iBAAiB,aAAa,SAAS;AACvC,aAAA,iBAAiB,YAAY,QAAQ;AACrC,aAAA,iBAAiB,aAAa,SAAS;AACvC,aAAA,iBAAiB,QAAQ,IAAI;AAAA,EAAA,CACvC;AAEDC,MAAAA,YAAY,MAAM;AACZ,QAAA,CAAC,YAAY,CAAC;AAChB;AAEO,aAAA,oBAAoB,aAAa,SAAS;AAC1C,aAAA,oBAAoB,aAAa,SAAS;AAC1C,aAAA,oBAAoB,YAAY,QAAQ;AACxC,aAAA,oBAAoB,aAAa,SAAS;AAC1C,aAAA,oBAAoB,QAAQ,IAAI;AAAA,EAAA,CAC1C;AAED,WAAS,UAAU,KAAgB;AAEtB,eAAA,QAAQ,qCAAU;AACb,oBAAA,MAAM,IAAI,IAAI;AACd,oBAAA,MAAM,IAAI,IAAI;AAAA,EAChC;AAEA,WAAS,UAAU,KAAgB;AACjC,QAAI,aAAc,aAAa;AAAA,EAEjC;AAEA,WAAS,SAAS,KAAgB;AAEhC,QAAI,eAAe;AAAA,EACrB;AAEA,WAAS,UAAU,KAAgB;AAEjC,QAAI,aAAc,aAAa;AAAA,EACjC;AAEA,WAAS,KAAK,KAAgB;AAExB,QAAA,CAAC,WAAW,SAAS,CAAC;AACxB;AAEM,YAAA,IAAID,YAAQ,UAAU,CAAC;AAE/B,aAAS,MAAM,WAAW;AAC1B,aAAS,MAAM,MAAM,GAAG,WAAW,MAAM,IAAIA,IAAAA,QAAQ,UAAU,IAAI,IAAI,UAAU,gBAAgB,MAAM,CAAC;AACxG,aAAS,MAAM,OAAO,GAAG,WAAW,MAAM,IAAIA,IAAAA,QAAQ,UAAU,IAAI,IAAI,UAAU,gBAAgB,MAAM,CAAC;AAAA,EAC3G;AACF;;"}